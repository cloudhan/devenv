FROM rocm/dev-ubuntu-22.04:6.1.2-complete

SHELL ["/bin/bash", "-c"]

COPY add-ppa.sh /usr/local/bin/

RUN export GNUPGHOME=/tmp/add-ppa-gnupg && mkdir -p ${GNUPGHOME} && chmod 700 ${GNUPGHOME} && \
    add-ppa.sh git-core/ppa E1DD270288B4E6030699E45FA1715D88E1DF1F24 && \
    add-ppa.sh fish-shell/release-3 59FDA1CE1B84B3FAD89366C027557F056DC33CA5 && \
    rm -rf /tmp/add-ppa-gnupg

RUN apt-get update
RUN apt-get -y install git wget curl fish tmux && apt-get -y clean

RUN export LLVM_VERSION=18 && \
    export CODENAME=$(grep UBUNTU_CODENAME /etc/os-release | cut -d= -f2) && \
    wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc && \
    echo "deb http://apt.llvm.org/${CODENAME}/ llvm-toolchain-${CODENAME}-${LLVM_VERSION} main" > /etc/apt/sources.list.d/llvm.list && \
    apt-get update && \
    apt-get -y install clang-tools-${LLVM_VERSION} && \
    apt-get -y clean

RUN export HELIX_VERSION=24.07 && \
    curl -Ls https://github.com/helix-editor/helix/releases/download/${HELIX_VERSION}/helix-${HELIX_VERSION}-x86_64-linux.tar.xz | tar -C /opt -xvJ && \
    ln -sf /opt/helix-24.07-x86_64-linux/hx /usr/local/bin/hx

ENV MAMBA_ROOT_PREFIX=/root/micromamba
# NOTE: env CONDA_PREFIX is needed to run micromamba install commands but is conflict with `auto_activate_base true`.
# Once set, we cannot delete the env entry from env table, so do just don't do it!
#     CONDA_PREFIX=/root/micromamba

RUN curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -C /usr/local -xvj bin/micromamba && \
    eval "$(/usr/local/bin/micromamba shell hook -s posix)" && \
    /usr/local/bin/micromamba shell -y init -s bash -p ~/micromamba && \
    source ~/.bashrc && \
    micromamba config -y append channels conda-forge && \
    micromamba config -y set channel_priority strict && \
    micromamba config -y set auto_activate_base true

RUN export CONDA_PREFIX=${MAMBA_ROOT_PREFIX} && \
    micromamba install -y \
        python=3.10 pip \
        cmake ninja ccache \
    && \
    micromamba clean -y -f -a
RUN export CONDA_PREFIX=${MAMBA_ROOT_PREFIX} && \
    micromamba run pip install \
        jupyter numpy matplotlib \
        pyright ruff-lsp yapf black \
    && \
    micromamba clean -y -f -a

RUN curl -Ls 'https://code.visualstudio.com/sha/download?build=stable&os=cli-alpine-x64' | tar -C /usr/local/bin -xvz

RUN mkdir -p ~/.config && \
    git clone https://github.com/cloudhan/helix-config.git ~/.config/helix && \
    hx --grammar fetch && \
    hx --grammar build

RUN rm -rf /root/.cache && mkdir -p /root/.cache && \
    ln -sf /home/guangyunhan/.cache/pip /root/.cache/pip && \
    ln -sf /home/guangyunhan/.cache/mamba /root/.cache/mamba && \
    ln -sf /home/guangyunhan/.cache/conda /root/.cache/conda && \
    ln -sf /home/guangyunhan/.cache/huggingface /root/.cache/huggingface

RUN export BAZELISK_VERSION=v1.20.0 && \
    wget https://github.com/bazelbuild/bazelisk/releases/download/${BAZELISK_VERSION}/bazelisk-linux-amd64 -qO /usr/local/bin/bazelisk-${BAZELISK_VERSION} && \
    chmod a+x /usr/local/bin/bazelisk-${BAZELISK_VERSION} && \
    ln -sf /usr/local/bin/bazelisk-${BAZELISK_VERSION} /usr/local/bin/bazelisk && \
    ln -sf /usr/local/bin/bazelisk-${BAZELISK_VERSION} /usr/local/bin/bazel
RUN export BUILDIFIER_VERSION=v7.1.2 && \
    https://github.com/bazelbuild/buildtools/releases/download/${BUILDIFIER_VERSION}/buildifier-linux-amd64 -qO /usr/local/bin/buildifier-${BAZELISK_VERSION} && \
    chmod a+x /usr/local/bin/buildifier-${BAZELISK_VERSION} && \
    ln -sf /usr/local/bin/buildifier-${BAZELISK_VERSION} /usr/local/bin/buildifier

# RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && source "$HOME/.cargo/env" && cargo install --locked git-branchless
